// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI agent that suggests an optimal price per night for a property.
 *
 * - suggestPrice - A function that handles the price suggestion process.
 * - SuggestPriceInput - The input type for the suggestPrice function.
 * - SuggestPriceOutput - The return type for the suggestPrice function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestPriceInputSchema = z.object({
  propertyDetails: z
    .string()
    .describe('Detailed description of the property, including size, amenities, and location.'),
  localMarketData: z
    .string()
    .describe('Data about the local market, including average prices, demand, and seasonal trends.'),
});
export type SuggestPriceInput = z.infer<typeof SuggestPriceInputSchema>;

const SuggestPriceOutputSchema = z.object({
  suggestedPrice: z
    .number()
    .describe('The AI-suggested optimal price per night for the property.'),
  reasoning: z
    .string()
    .describe('Explanation of why the suggested price is optimal, based on the input data.'),
});
export type SuggestPriceOutput = z.infer<typeof SuggestPriceOutputSchema>;

export async function suggestPrice(input: SuggestPriceInput): Promise<SuggestPriceOutput> {
  return suggestPriceFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestPricePrompt',
  input: {schema: SuggestPriceInputSchema},
  output: {schema: SuggestPriceOutputSchema},
  prompt: `You are an AI-powered pricing expert for rental properties.

You will analyze the property details and local market data to suggest an optimal price per night.

Property Details: {{{propertyDetails}}}
Local Market Data: {{{localMarketData}}}

Based on this information, suggest the most competitive and profitable price per night. Explain your reasoning.`,
});

const suggestPriceFlow = ai.defineFlow(
  {
    name: 'suggestPriceFlow',
    inputSchema: SuggestPriceInputSchema,
    outputSchema: SuggestPriceOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
